#include <iostream>
using namespace std;

int strcmp (char *str1, char *str2) {
    for (int i = 0; str1[i] != '\0'; ++i) {
        if(str1[i] != str2[i]) return str1[i]>str2[i] ? 1 : -1;
    }
    return 0;
}

int strlen(char* str1) {
    int length = 0;
    for (int i = 0; str1[i] != '\0'; i++)
    {
        ++length;
    }
    return length;
}

void reverse (char *str1) {
    char temp;
    int N;

    N = strlen(str1);
    for(int i = 0; i <= N/2 - 1; ++i){
        temp = str1[i];
        str1[i] = str1[N-1-i];
        str1[N-1-i] = temp;
    }
    return;
}

void replace (char *str1, char find, char subst){
    for(int i = 0; str1[i] != '\0'; ++i){
       if (str1[i] == find) str1[i] = subst;   
    }
    return;
}

int finds (char *str1, char find){
    for(int i = 0; str1[i] != '\0'; ++i){
        if (str1[i] == find) return i+1;
    }
    return -1;
}

int count (char *str1, char find){
    int counts = 0;
    for(int i = 0; str1[i] != '\0'; ++i){
        if(str1[i] == find) counts++;
    }
    return counts; 
}

int substr (char *Instr, char *Outstr, int startPossition, int endPossition){
    int L, i;
    L = strlen(Instr);
    if ((L<startPossition)||(L<endPossition)) return -1;
    for(i = startPossition-1;i < endPossition;++i) {
        Outstr[i-startPossition+1] = Instr[i];
    }
    Outstr[i-startPossition+1] = '\0';
    return 0;
}

int strstr (char *bigStr, char *smallStr){
    int N, n;
    N = strlen(bigStr);
    n = strlen(smallStr);
    bool flag = false;
    for(int i = 0; i <= N -n; ++i) {
        flag = false;
        for(int j = 0; j < n; ++j){
            if (bigStr[i+j] == smallStr[j]) flag = true;
            else {
                flag = false; 
                break;
            }
        }
        if(flag) return 0;
    }
    return -1;
}



int main()
{
    char string1[80];
    cout << "Enter the first string:\n";
    cin.getline(string1, 80);
    char string2[80];
    cout << "Enter the second string:\n ";
    cin.getline(string2, 80);

    //int result;

    //result = strcmp(string1, string2);

    //cout << result;

    //reverse(string1);
    //cout << string1 << endl;

    //char Find;
    //cout << "Enter Find symbol: ";
    //cin >> Find;
    //char Subst;
    //cout << "Enter Subst symbol: ";
    //cin >> Subst;

    //replace(string1, Find, Subst);
    //cout << string1 << endl; 

    //int answer;
    //answer = finds(string1, Find);
    //cout << answer << endl;
    
    //cout << count(string1, Find) << endl; 

    //char string3[80];

    //int startPos;
    //cout << "Enter start position: ";
    //cin >> startPos;
    //int endPos;
    //cout << "Enter end position: ";
    //cin >> endPos;

    //if(substr(string1, string3, startPos, endPos) != -1)
      //cout << string3 << endl;

    if(strstr(string1, string2) == 1){
        cout << "string is found" << endl;
    }
    else cout << "string is not found"<< endl;
    
}
